{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useEffect","a","fetch","response","json","data","console","log","setLoading","setList","error","getAPI","useState","list","loading","map","href","_id","src","image","alt","name","description","method","action","type","placeholder","required","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOA4EeA,EA1EH,WACRC,qBAAU,YACM,uCAAG,8BAAAC,EAAA,sEACYC,MAAM,0BADlB,cACLC,EADK,gBAEQA,EAASC,OAFjB,OAELC,EAFK,OAIX,IACIC,QAAQC,IAAIF,GACZG,GAAW,GACXC,EAAQJ,GACV,MAAOK,GACLJ,QAAQC,IAAIG,GATL,2CAAH,qDAYZC,KACD,IAfW,MAiBUC,mBAAS,IAjBnB,mBAiBPC,EAjBO,KAiBDJ,EAjBC,OAkBgBG,oBAAS,GAlBzB,mBAkBPE,EAlBO,KAkBEN,EAlBF,KAoBd,OACI,eAAC,WAAD,WACI,2CAEA,8BACKM,EACG,0CAEA,8BACKD,EAAKE,KAAI,SAACV,GAAD,OACN,8BACI,+BACI,6BACI,6BACI,mBAAGW,KAAK,aAAR,SAAsBX,EAAKY,UAGnC,6BACI,qBAAKC,IAAKb,EAAKc,MAAOC,IAAKf,EAAKgB,SAEpC,6BACI,4BAAIhB,EAAKiB,oBAXXjB,EAAKY,YAmB/B,gCACI,8CACA,uBAAMM,OAAO,OAAOC,OAAO,iCAA3B,UACI,gCACI,yCACA,uBAAOC,KAAK,OAAOJ,KAAK,OAAOK,YAAY,OAAOC,UAAQ,OAE9D,gCACI,0CACA,uBAAOF,KAAK,OAAOJ,KAAK,QAAQK,YAAY,QAAQC,UAAQ,OAEhE,gCACI,gDACA,uBAAOF,KAAK,OAAOJ,KAAK,cAAcK,YAAY,cAAcC,UAAQ,OAG5E,8BACI,wBAAQF,KAAK,SAAb,kCCxDTG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5dd69547.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\n\nconst App = () => {\n    useEffect(() => {\n        const getAPI = async () => {\n            const response = await fetch('http://localhost:8080/');\n            const data = await response.json();\n\n            try {\n                console.log(data);\n                setLoading(false);\n                setList(data);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n        getAPI();\n    }, []);\n\n    const [list, setList] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    return (\n        <Fragment>\n            <h1>List Home</h1>\n\n            <div>\n                {loading ? (\n                    <div>Loading</div>\n                ) : (\n                    <div>\n                        {list.map((data) => (\n                            <div key={data._id}>\n                                <ul>\n                                    <li>\n                                        <h1>\n                                            <a href=\"/{data.id}\">{data._id}</a>\n                                        </h1>\n                                    </li>\n                                    <li>\n                                        <img src={data.image} alt={data.name} />\n                                    </li>\n                                    <li>\n                                        <p>{data.description}</p>\n                                    </li>\n                                </ul>\n                            </div>\n                        ))}\n                    </div>\n                )}\n            </div>\n            <div>\n                <h1>Add New List</h1>\n                <form method=\"POST\" action=\"http://localhost:8080/add-list\">\n                    <div>\n                        <label>Name</label>\n                        <input type=\"text\" name=\"name\" placeholder=\"Name\" required />\n                    </div>\n                    <div>\n                        <label>Image</label>\n                        <input type=\"text\" name=\"image\" placeholder=\"Image\" required />\n                    </div>\n                    <div>\n                        <label>Description</label>\n                        <input type=\"text\" name=\"description\" placeholder=\"Description\" required />\n                    </div>\n\n                    <div>\n                        <button type=\"submit\">Add List</button>\n                    </div>\n                </form>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './Style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}